/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void startVisualization(GButton source, GEvent event) { //_CODE_:startVisualizationButton:687057:
  println("startVisualizationButton - GButton >> GEvent." + event + " @ " + millis());
  String[] args = {selectedFile.getName(), fftSizeInput.getText()};
  println(args[0]);
  println(args[1]);
  Analysis sa = new Analysis(selectedFile.getAbsolutePath(), Integer.parseInt(args[1]));
  PApplet.runSketch(args, sa);
} //_CODE_:startVisualizationButton:687057:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:songInput:395241:
  println("songInput - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:songInput:395241:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:315857:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  selectInput("Select a Song", "fileSelected");
  
} //_CODE_:button1:315857:

public void checkbox1_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox1:208046:
  println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
} //_CODE_:checkbox1:208046:

public void option1_clicked1(GOption source, GEvent event) { //_CODE_:linear:754631:
  println("linear - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:linear:754631:

public void option2_clicked1(GOption source, GEvent event) { //_CODE_:expo:932156:
  println("expo - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:expo:932156:

public void option1_clicked2(GOption source, GEvent event) { //_CODE_:live:814432:
  println("live - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:live:814432:

public void option2_clicked2(GOption source, GEvent event) { //_CODE_:overview:718778:
  println("overview - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:overview:718778:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(true);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Frequency Distribution Analyzer");
  fftSize = new GLabel(this, 10, 80, 80, 20);
  fftSize.setText("FFT-Size");
  fftSize.setOpaque(false);
  fftSizeInput = new GTextField(this, 100, 80, 230, 20, G4P.SCROLLBARS_NONE);
  fftSizeInput.setOpaque(true);
  song = new GLabel(this, 10, 45, 80, 20);
  song.setText("Song");
  song.setOpaque(false);
  startVisualizationButton = new GButton(this, 10, 221, 323, 30);
  startVisualizationButton.setText("Start Visualization");
  startVisualizationButton.setTextBold();
  startVisualizationButton.addEventHandler(this, "startVisualization");
  title = new GLabel(this, 70, 8, 200, 20);
  title.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  title.setText("Frequency Distribution Visualizer");
  title.setTextBold();
  title.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  title.setOpaque(false);
  songInput = new GTextField(this, 100, 45, 185, 20, G4P.SCROLLBARS_NONE);
  songInput.setOpaque(true);
  songInput.addEventHandler(this, "textfield1_change1");
  button1 = new GButton(this, 295, 45, 37, 20);
  button1.setText("Song");
  button1.addEventHandler(this, "button1_click1");
  label1 = new GLabel(this, 120, 261, 120, 20);
  label1.setText("Control Description:");
  label1.setOpaque(false);
  label2 = new GLabel(this, 10, 290, 220, 20);
  label2.setText("+/- : Forward/Backward 5s");
  label2.setOpaque(false);
  label3 = new GLabel(this, 10, 310, 222, 20);
  label3.setText("q/e : Threshold energy");
  label3.setOpaque(false);
  label4 = new GLabel(this, 10, 330, 225, 20);
  label4.setText("arrow up/down: render with sample");
  label4.setOpaque(false);
  label5 = new GLabel(this, 10, 350, 225, 20);
  label5.setText("Mousewheel: Rotate x");
  label5.setOpaque(false);
  label6 = new GLabel(this, 10, 370, 227, 20);
  label6.setText("Shift + Mousewheel: Rotate y");
  label6.setOpaque(false);
  checkbox1 = new GCheckbox(this, 100, 185, 120, 20);
  checkbox1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox1.setOpaque(false);
  checkbox1.addEventHandler(this, "checkbox1_clicked1");
  label7 = new GLabel(this, 10, 185, 111, 20);
  label7.setText("Camera Wobble");
  label7.setOpaque(false);
  label8 = new GLabel(this, 86, 405, 184, 20);
  label8.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label8.setText("Copyright T.Sigel, Y. Sutter");
  label8.setTextItalic();
  label8.setOpaque(false);
  linExp = new GToggleGroup();
  linear = new GOption(this, 100, 115, 82, 20);
  linear.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  linear.setText("Linear");
  linear.setOpaque(false);
  linear.addEventHandler(this, "option1_clicked1");
  expo = new GOption(this, 195, 115, 120, 20);
  expo.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  expo.setText("Exponential");
  expo.setOpaque(false);
  expo.addEventHandler(this, "option2_clicked1");
  linExp.addControl(linear);
  linear.setSelected(true);
  linExp.addControl(expo);
  liveOverview = new GToggleGroup();
  live = new GOption(this, 100, 150, 85, 20);
  live.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  live.setText("Live");
  live.setOpaque(false);
  live.addEventHandler(this, "option1_clicked2");
  overview = new GOption(this, 195, 150, 120, 20);
  overview.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  overview.setText("Overview");
  overview.setOpaque(false);
  overview.addEventHandler(this, "option2_clicked2");
  liveOverview.addControl(live);
  live.setSelected(true);
  liveOverview.addControl(overview);
}

// Variable declarations 
// autogenerated do not edit
GLabel fftSize; 
GTextField fftSizeInput; 
GLabel song; 
GButton startVisualizationButton; 
GLabel title; 
GTextField songInput; 
GButton button1; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GCheckbox checkbox1; 
GLabel label7; 
GLabel label8; 
GToggleGroup linExp; 
GOption linear; 
GOption expo; 
GToggleGroup liveOverview; 
GOption live; 
GOption overview; 
